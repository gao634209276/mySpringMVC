<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/util
       http://www.springframework.org/schema/util/spring-util-3.0.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://www.springframework.org/schema/context
	   http://www.springframework.org/schema/context/spring-context.xsd">

	<context:component-scan base-package="spring"/>
	<mvc:annotation-driven/>
	<!-- 这种加载方式可以在代码中通过@Value注解进行注入,
	可以将配置整体赋给Properties类型的类变量，也可以取出其中的一项赋值给String类型的类变量 -->
	<!-- <util:properties/> 标签只能加载一个文件，当多个属性文件需要被加载的时候，可以使用多个该标签 -->
	<util:properties id="remoteSettings" location="classpath:/conf/remote.properties"/>
	<!-- <util:properties/> 标签的实现类是PropertiesFactoryBean，
	直接使用该类的bean配置，设置其locations属性可以达到一个和上面一样加载多个配置文件的目的 -->
	<!--<bean id="settings" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="locations">
			<list>
				<value>classpath:/property/mq.properties</value>
				<value>classpath:/property/remote.properties</value>
			</list>
		</property>
	</bean>-->
	<!-- 可以使用如下的方式声明Properties类型的FactoryBean来加载配置文件，这种方式就只能当做Properties属性注入，而不能获其中具体的值 -->
	<bean id="remoteConfigs" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="locations">
			<list>
				<value>classpath:/conf/remote.properties</value>
				<!--<value>file:/opt/demo/config/demo-remote.properties</value>-->
			</list>
		</property>
	</bean>
	<!--或者使用一下方式-->
	<!-- PropertyPlaceholderConfigurer类中有个locations属性，接收的是一个数组，即我们可以在下面配好多个properties文件 -->
	<!--自动加载-->
	<!--<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PreferencesPlaceholderConfigurer">
		<property name="properties" ref="remoteSettings"/>
	</bean>-->

	<!-- 远端调用客户端类@see spring.properties.Client-->
	<bean id="spring.client" class="spring.properties.Client">
		<property name="properties" ref="remoteConfigs"/>
	</bean>
</beans>