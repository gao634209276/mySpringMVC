<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- base-package扫描的基本包路径 -->
	<!-- annotation-config是否激活属性注入注解 -->
	<!-- name-generator Bean的ID策略生成器 -->
	<!-- resource-pattern对资源进行筛选的正则表达式，这边是个大的范畴，具体细分在include-filter与exclude-filter中进行 -->
	<!-- scope-resolver scope解析器 ，与scoped-proxy只能同时配置一个 -->
	<!-- coped-proxy scope代理，与scope-resolver只能同时配置一个 -->
	<!-- use-default-filters是否使用默认的过滤器，默认值true -->
	<!-- context:include-filter 子节点指定包含哪些表达式的组件，该节点需要 use-default-filters 配合使用-->
	<!-- context:exclude-filter 子节点指定排除哪些指定表达式的组件 -->
	<!-- 以下为默认component-scan配置值 -->
	<!--<context:component-scan
			base-package="spring.annotation"
			annotation-config="true"
			name-generator="org.springframework.context.annotation.AnnotationBeanNameGenerator"
			resource-pattern="spring.annotation.*/*.class"
			scope-resolver="org.springframework.context.annotation.AnnotationScopeMetadataResolver"
			scoped-proxy="no"
			use-default-filters="false">

		&lt;!&ndash; 注意：若使用include-filter去定制扫描内容，要在use-default-filters="false"的情况下，不然会“失效”，被默认的过滤机制所覆盖 &ndash;&gt;
		&lt;!&ndash; annotation是对注解进行扫描 &ndash;&gt;
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Component"/>
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Repository"/>
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Service"/>
		&lt;!&ndash; assignable是对类或接口进行扫描 &ndash;&gt;
		<context:include-filter type="assignable" expression="spring.annotation.BeanAnnotation"/>

		&lt;!&ndash; 注意：在use-default-filters="false"的情况下，exclude-filter是针对include-filter里的内容进行排除 &ndash;&gt;
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
		<context:exclude-filter type="assignable" expression="controller.MainController"/>
		<context:exclude-filter type="regex" expression=".service.*"/>
	</context:component-scan>-->

	<!--例子-->
	<context:component-scan
			base-package="spring.annotation"
			annotation-config="true"
			name-generator="org.springframework.context.annotation.AnnotationBeanNameGenerator"
			scope-resolver="org.springframework.context.annotation.AnnotationScopeMetadataResolver"
			use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Component"/>
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Repository"/>
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Service"/>
	</context:component-scan>
</beans>
