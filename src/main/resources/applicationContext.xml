<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	   http://www.springframework.org/schema/beans/spring-beans.xsd
	   http://www.springframework.org/schema/context
	   http://www.springframework.org/schema/context/spring-context.xsd
	   http://www.springframework.org/schema/mvc
	   http://www.springframework.org/schema/mvc/spring-mvc.xsd">
	<!---scan标签指定了查找组件的包名-->
	<context:component-scan base-package="controller,servlet,service,spring"/>
	<!-- 业务类，可以设置为自动装配 -->
	<mvc:annotation-driven/>
	<mvc:default-servlet-handler/>
	<import resource="classpath:rpc/httpInvoker.xml"/>
	<import resource="classpath:rpc/hessian.xml"/>
	<import resource="classpath:rpc/rmi.xml"/>
	<import resource="rpc/burlap.xml"/>
	<!--<import resource="rpc/webService.xml"/>-->
	<!--spring加载jdbc.properties-->
	<import resource="classpath:/property/jdbc.xml"/>
	<!--spring加载properties方式2-->
	<import resource="classpath:/property/mq.xml"/>
	<!--spring加载properties以及管理demo-->
	<import resource="classpath:property/remote.xml"/>
	<!--自定义properties加载类，注入bean-->
	<import resource="classpath:property/myremote.xml"/>



	<!--<wss:binding url="/getNameWS">
		<wss:service>
			<ws:service bean="#getNameWSImpl" /> &lt;!&ndash;注入实现类&ndash;&gt;
		</wss:service>
	</wss:binding>-->

	<!--<bean id="accountWebService" class="org.springframework.remoting.jaxrpc.JaxRpcPortProxyFactoryBean">
		<property name="serviceInterface" value="example.RemoteAccountService"/>
		<property name="wsdlDocumentUrl" value="http://localhost:8080/account/services/accountService?WSDL"/>
		<property name="namespaceUri" value="http://localhost:8080/account/services/accountService"/>
		<property name="serviceName" value="AccountService"/>
		<property name="portName" value="AccountPort"/>
	</bean>-->
	<!--<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**"/>
			<bean class="com.plateno.interceptor.CommonInterceptor"/>
		</mvc:interceptor>
	</mvc:interceptors>-->

	<!--Client Site conf Bean-->
	<!--为了把rmi服务连接到客户端上，我们将创建一个单独的Spring容器，包含这个简单对象和链接配置位的服务：-->
	<!--<bean id="rmiProxyFactoryBean" class="org.springframework.remoting.rmi.RmiProxyFactoryBean">
		<property name="serviceUrl" value="rmi://localhost:1199/remote/rmiService"/>
		<property name="serviceInterface" value="service.ServiceIf"/>
	</bean>-->
</beans>